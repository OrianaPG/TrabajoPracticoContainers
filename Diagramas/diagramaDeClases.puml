@startuml Containers
class Empresa {
    +nombre: string
    +sedes: list<Sede>
    +barcos: list<Barco>
    +camiones: list<Camion>
    +camionesDisponibles : int // 5 default
    +containers: list<Contenedor>

    +enviarContainer(origen: Sede, destino: Sede, container: Contenedor): void
}

class Sede {
    +nombre: string
    +ubicacion: string
    +containers: list<Contenedor>

    +agregarContainer(container: Contenedor): void
    +eliminarContainer(container: Contenedor): void
}

abstract class Barco {
    +id: int
    +maxContainers: int
    +maxPeso: float
    -combustibleResatante: float
    -tipoDispositivo: string
    -maxCombustible: float
    +containers: list<Contenedor>

    +agregarContainer(container: Contenedor): boolean
    +eliminarContainer(container: Contenedor): boolean
    +getCantidadContainers(): int
    +getPesoContainers(): float
    +getCombustibleRestante(): float
    +getTipoDispositivo(): string
    +cargarCombustible(cantidad: float) : void
    +usarVelas(): void
}

class BarcoBasico {
    -medidas: Medidas
}

class BarcoEspecializado {
    -medidas: Medidas
}

class Medidas {
    -ancho: float
    -alto: float
    -largo: float
}

class Camion {
    +id: int
    +container: Contenedor
    +disponible: boolean

    +entregarContainer(): void //este metodo vuelve a poner container en null
}

abstract class Contenedor {
    +id: int
    +tipo: string
    +precioBase: float
    +precioCarga: float
    +pesoMax: float
    +volumenMax: float
}

class ContenedorBasico {
    -medidas: Medidas
}

class ContenedorBasicoHC {
    -medidas: Medidas
}

class ContenedorFlatRack {
    -medidas: Medidas
}

class ContenedorVentilado extends Contenedor {
    -medidas: Medidas
}

class ContenedorOpenTop extends Contenedor {
    -medidas: Medidas
}

class Carga {
    -tipo: string
}
class CargaQuimica extends Carga {

}
class CargaMaquinaria extends Carga {

}
class CargaAlimenticia extends Carga {

}

class GPS {
    +calcularDistancia(origen, destino) : float
    +calcularTiempo(origen, destino) : float
}

class calculadoraGanancias {
    +calcularGanancias(): float
}

class CalculadoraPrecio {
    + calcularCostoTotal(): int
}

class Viaje {
container
contenedorLleno
}

Empresa  o--  Viaje

GPS o-- Barco
calculadoraGanancias o-- Empresa
CalculadoraPrecio o-- Barco
Empresa o-- Sede
Empresa o-- Barco
Empresa o-- Camion
Empresa o-- Contenedor
Contenedor o-- Carga

Sede "1" o-- "*" Contenedor

Barco <|-- BarcoBasico
Barco <|-- BarcoEspecializado

Barco "1" o-- "*" Contenedor

Camion "1" -- "1" Contenedor

Contenedor <|-- ContenedorBasico
Contenedor <|-- ContenedorBasicoHC
Contenedor <|-- ContenedorFlatRack

Contenedor "1" o-- "1" Medidas
BarcoBasico "1" o-- "1" Medidas
BarcoEspecializado "1" o-- "1" Medidas
ContenedorBasicoHC "1" o-- "1" Medidas
ContenedorFlatRack "1" o-- "1" Medidas
ContenedorVentilado "1" o-- "1" Medidas
ContenedorOpenTop "1" o-- "1" Medidas
ContenedorBasico "1" o-- "1" Medidas
@enduml
